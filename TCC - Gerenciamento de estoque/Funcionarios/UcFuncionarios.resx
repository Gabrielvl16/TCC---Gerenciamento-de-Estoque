<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOFSURBVFhHtVfN
        b01REL/E9/eChPgMpd6b06pUhMTCxsLGRyKp+AeIJf6A10T0nTmPSkWlWFj5WGGDsBKkviIsWGioM+e1
        WhWC1kdDn8x995Z37nm3t69M8kv6OjO/mTt35py5npdQVG3PdBTUgEK3INBDBDII9BWBBhHoHf9Pgj6t
        gHbL6r6Ztn/F0lSjlzMxgv6MQIWEGJBAZzFlVtp8iSWzrHMKgmlCoO+OAEkxqEAjc9n8sXJUdC1GoAcO
        wsogqL059WaBHccp2bQGBOqLkIwdRglTa8crkSYwVRKo2+H8r2AQOufbcX3JwPNJEswTh5MNjYJuIdD1
        wP6nw6Y8BLW3VHVMtuN7Ckw2YvwHQxLoAkK+zvZrruucg4IOIdB7h18Z6MYSkix0L4np9n6Zoh0lDg45
        tsYs5Kdz+EeggL6UvApM0ynbKMDPXNpsDe1kbVc1ArUqoKcI9FICXVNg9hS8wjjWZ+tfzUagZw4eF1qL
        mW80U4sZRQwKEqg5DM4nXHDyRewU0A3m8R8G8nUJ+6I/A+9meEqYnQ4lYzC3qnuu/+Rg1iPQD4fNMBTQ
        uTBZFHTZ1jshqCGu/DdDQi61Q2/jlxRvUsVqmT0OvQOmjUt7J6rwy3+UydrqH08MLpyIjQ0FdIB9cqDT
        tq4M7nsIutehKEihM0x2ZO3bebauPEwT+wRT5dDb0L1cAWcDKqATTJbxCuP5drP1Lkig/f4rE7TO1pXB
        dy9m/h+FPYBAFx16G4O51OulQQL7HHoXBpi8y6FgDPHFxIR8R/DYOGz+gpZhwgrMvajeCRrJ+GpImgW9
        Kdh8bJsCT1Jmc2GC//RA2yL6chDUHjeGPmSaDoZJ8KrFvxHoCh8+3Ccyld8Q6ll4g+Ins3ncMMfjDqI/
        SQAd5nH8O5At2RpTww3LfwdJaJvHhgS9y2up6phVbhIsvFBpvZcvnTBopr57mhR6i0zTJe4ZBH1mFEl8
        ZH+fiEvpMIjDJwT6UAxq65IloYBODpcPBa2IGccKMGISX/mwGk7ATwJ0Y5RoLCgm4UqAe6okOAuvSaO4
        y5PivB2cP2CcKxlLsI6XO5j+BXoipbeFV+f/lEQ+V9O52o7nFK5EsHbZJJXiEfeCHSdW+D3xlTzG6fiW
        5BCLFb+L/S/i5B+nfLDxnMva/CKbr2LhBVKlaTsTI9BdfqfBDckHUo8UdJt1bBMuqEnkN/tIoxLWVK4g
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>